// <auto-generated />
using System;
using System.Collections.Generic;
using LotteryDDD.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LotteryDDD.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20240413131424_AddNumbers")]
    partial class AddNumbers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LotteryDDD.Domain.Aggregates.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.ComplexProperty<Dictionary<string, object>>("BetAmount", "LotteryDDD.Domain.Aggregates.Game.BetAmount#BetAmount", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("BetAmount");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("RoundNumber", "LotteryDDD.Domain.Aggregates.Game.RoundNumber#RoundNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("RoundNumber");
                        });

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("LotteryDDD.Domain.Aggregates.GameNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.ComplexProperty<Dictionary<string, object>>("NumberValue", "LotteryDDD.Domain.Aggregates.GameNumber.NumberValue#GameNumberValue", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("NumberValue");
                        });

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameNumbers");
                });

            modelBuilder.Entity("LotteryDDD.Domain.Aggregates.GameUser", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("SessionStatus")
                        .HasColumnType("integer");

                    b.HasKey("GameId", "UserId");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("LotteryDDD.Domain.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.ComplexProperty<Dictionary<string, object>>("Balance", "LotteryDDD.Domain.Aggregates.User.Balance#Balance", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("Balance");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Username", "LotteryDDD.Domain.Aggregates.User.Username#Username", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Username");
                        });

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LotteryDDD.Domain.Aggregates.GameNumber", b =>
                {
                    b.HasOne("LotteryDDD.Domain.Aggregates.Game", null)
                        .WithMany("Numbers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LotteryDDD.Domain.Aggregates.GameUser", b =>
                {
                    b.HasOne("LotteryDDD.Domain.Aggregates.Game", null)
                        .WithMany("Users")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LotteryDDD.Domain.Aggregates.Game", b =>
                {
                    b.Navigation("Numbers");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
